________________________________________________________________________________________________________________________________________


[PYTHON] 

Python es un lenguaje de alto nivel de programación interpretado. Se trata de un lenguaje de programación multiparadigma ya que soporta parcialmente la orientación a objetos.

Los desarrolladores utilizan Python porque es eficiente y fácil de aprender, además de que se puede ejecutar en muchas plataformas diferentes.

Paradigma: Creencias o ideas que puede tener una persona diferente de las creencias o ideas que tenga otra, por ejemeplo: {

  persona1: así he aprendido a lidiar con este problema.
  persona2: yo ese problema lo he resuelto de otra manera más sencilla.
  persona3: sus ideas o creencias, osea paradigmas son completamente diferentes, y depende de cómo es cada ser humano.

}

Paradigma de programación: principios, reglas o estandares que siguen ciertas personas que creen que eso es lo que define a ciertos temas, o que creen que es la manera correcta de hacerse tanto del lado del frontend, como del backend.

Lenguaje de programación interpretado: Es aquel que no se ejecuta directamente en código máquina

compilar: es el proceso de traducir el código fuente escrito en un lenguaje de programación como: C, C++, Java.


________________________________________________________________________________________________________________________________________


[ENTORNO VIRTUAL]

Un entorno virtual en Python es un entorno en el que las bibliotecas y los scripts instalados en él estan aislados de los instalados en otros entornos virtuales.


________________________________________________________________________________________________________________________________________


[DICCIONARIO]

Un diccionario en Python es una estructura de datos que permite almacenar cualquier tipo de información

________________________________________________________________________________________________________________________________________


[for en Python vs for en javascript]

La sintaxis de ambos es diferente, se utilizan casi para lo mismo, principalmente se utiliza para iterar sobre elementos, el bucle for de javascript tiene más libertad porque consta de una buena sintaxis en la que se pueden expecificar varios parámemtros, valor inicial, condición y paso.

En python es unicamente el nombre de la variable en la que se almacenaran los valores extraidos del elemento y el elemento.

for en python:

for valores in lista1:

________________________________________________________________________________________________________________________________________


[LISTA VS TUPLA EN PYTHON]

Las tuplas son unicamente de escritura mientras que las listas son de lectura y escritura.

________________________________________________________________________________________________________________________________________


[IMPRIMIR RESULTADO POR CONSOLA] - [PRINT]

Si queremos imprimir algo por consola es posible utilizar la función print() por ejemplo:

mensaje = "Hola Mundo"

print(mensaje)

________________________________________________________________________________________________________________________________________


[DEFINIR FUNCIÓN] - [DEF]

Para definir una función en Python se utiliza la palabra reservada 'def' y luego el nombre de la función, por ejemplo:

def mensaje()

Esta función puede resivir un valor mediante un parámetro asignado. En caso de que se pase una variable como parámetro, esta variable debe inicializarse antes que la función, por ejemplo:

message = "Hola Mundo"

def mensaje(message)

  print(f"user: {message}")

mensaje(message)

lo que devuelve: {

  user: Hola Mundo

}


________________________________________________________________________________________________________________________________________


[COMO USAR INPUT] - [INPUT]

El input se utiliza para hacer pruebas de envío de datos por teclado. El input captura lo ingresado por teclado y es posible almacenar lo que capturó dentro de una variable, luego ese valor se puede mostrar por consola con la función print()


valor = input("Ingrese un algo: ")


Esto debe ser ser definido fuera de la función.


mensaje = input("Ingrese algo:")

def mensaje(mensaje):

  print(f"user: {mensaje}")
  
mensaje(mensaje)


________________________________________________________________________________________________________________________________________


[INTERACIONES] - [RANGE]

El range genera unos números que son especificados por el usuario hasta cierto punto, puede recibir 3 parámetros, en el primer parámetro el usuario debe especificar por cuál número inicializará, en el segundo parámetro se especifica el límite al cual no se debe llegar, y el último parámetro recibe los saltos de número que se iran haciendo hasta llegar al límite, por ejemplo: 

range(1, 10, 2)

Si como inicio ingreso 1, como límite ingreso 10, y como paso ingreso 2, la lista que se creará tendrá como primer valor el 1, luego se saltará el siguiente valor y mostrará el segundo valor, osea que cada un valor que se salta, muestra un valor, repetirá esto sin pasar del 10 ni llegando a ser 10.

Parámetros de range:  (valorInicial, límite, paso)

valores por defecto:{

  inicial: 0,
  paso: 1

}


Tengo una lista con las vocales.

lista = ["a","e","i","o","u"]

